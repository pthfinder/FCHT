
namespace = tournament

tournament.99 = {
	hidden = yes

	immediate = {
		remove_list_variable = {
			name = tournament_list
			target = scope:activity.activity_owner
		}
	}
}
# Decide the type of tournament.

tournament.01 = {


	option = { #local
		add_character_flag = holding_tournament

		capital_province = {
			spawn_activity = {
				type = local_tournament
				owner = root
			}
		}
		set_variable = {
			name = num
			value = 1
		}


		every_player = {
			limit = {
				NOT = {
					this = root
				}
				realm_to_title_distance_squared = {
					title = root.primary_title
					value <= 6000
				}
			}
			this = {
				add_to_variable_list = {
					name = tournament_list
					target = root
				}
			}
		}



		ai_chance = {
			base = 0
			modifier = {
				highest_held_title_tier >= tier_county
				add = 10
			}
			modifier = {
				yearly_character_income >= 25
				add = 10
			}
		}
	}

	option = { #regional
		add_character_flag = holding_tournament

		capital_province = {
			spawn_activity = {
				type = regional_tournament
				owner = root
			}
		}
		
		set_variable = {
			name = num
			value = 1
		}


		every_player = {
			limit = {
				NOT = {
					this = root
				}
				realm_to_title_distance_squared = {
					title = root.primary_title
					value <= 8000
				}
			}
			this = {
				add_to_variable_list = {
					name = tournament_list
					target = root
				}
			}
		}



		ai_chance = {
			base = 0
			modifier = {
				highest_held_title_tier >= tier_duchy
				add = 25
			}
			modifier = {
				yearly_character_income >= 50
				add = 10
			}
			modifier = {
				has_trait = humble
				has_trait = fickle
				has_trait = greedy
				add = 10
			}
		}

	}

	option = { #grand
		add_character_flag = holding_tournament

		capital_province = {
			spawn_activity = {
				type = grand_tournament
				owner = root
			}
		}
		set_variable = {
			name = num
			value = 1
		}

		every_player = {
			limit = {
				NOT = {
					this = root
				}
				realm_to_title_distance_squared = {
					title = root.primary_title
					value <= 12000
				}
			}
			this = {
				add_to_variable_list = {
					name = tournament_list
					target = root
				}
			}
		}


		ai_chance = {
			base = 0
			modifier = {
				highest_held_title_tier >= tier_kingdom
				add = 25
			}
			modifier = {
				yearly_character_income >= 100
				add = 10
			}
			modifier = {
				has_trait = ambitious
				has_trait = arrogant
				has_trait = gregarious
				add = 10
			}
		}
	}
}


#  Character receives invitation to join a tournament.
tournament.02 = {
	type = letter_event
	opening = {
		desc = tournament.02.opening
	}
	desc = tournament.02.desc
	sender = scope:activity.activity_owner

	trigger = {
		is_alive = yes
		is_at_war = no
		is_imprisoned = no
		is_incapable = no
		is_in_an_activity = no
		
	}
	immediate = {
		scope:activity.activity_owner = {
			save_scope_as = tournament_host
		}

		play_music_cue = "mx_cue_banquet"
	}




	option = {
		name = tournament.02.option.a
		trigger = {
			exists = scope:activity
		}
		scope:activity = {
			accept_invitation_for_character = root
		}
		scope:activity.activity_owner = {
			change_variable = {
				name = num
				add = 1
			}
		}

		every_knight = {
			limit = {
				is_knight_of = root
			}
			if = {
				limit = {
				is_ai = yes					
				ai_knight_will_join_with_liege = yes
				}
				scope:activity = {
					invite_character_to_activity = prev
					accept_invitation_for_character = prev
				}
				scope:activity.activity_owner = {
					change_variable = {
						name = num
						add = 1
					}
				}
			}
			else = {
				this = {
					trigger_event = tournament.05
				}

			}
		}

		

		
		remove_character_flag = invited_to_tournament

		ai_chance = {
			base = 50
			modifier = {
				add = 25
				has_trait = brave
				has_trait = gallant
			}
			modifier = {
				is_knight_of = scope:activity.activity_owner
				add = 1000
			}
			modifier = {
				is_vassal_or_below_of = scope:activity.activity_owner
				add = 30

			}
			modifier = {
				root.liege = scope:activity.activity_owner.liege
				add = 10
			}
		}
		
	}
	option = {
		name = tournament.02.option.b
		trigger = {
			exists = scope:activity
		}
		scope:activity = {
			decline_invitation_for_character = root
		}
		remove_character_flag = invited_to_tournament
		ai_chance = {
			base = 0
			modifier = {
				root.highest_held_title_tier > scope:activity.activity_owner.highest_held_title_tier  # Not super prestigious is it?
				add = -50
			}

			modifier = {
				NOT = {
					root.culture_group = scope:activity.activity_owner.culture_group
				}
				add = -10
			}
		}
	}
	option = {
		#fallback
		trigger = {
			NOT = {
				exists = scope:activity
			}
		}
	}
}

# Event for failed tournament, nobody showed up..
tournament.03 = {
	type = character_event
	title = "tournament failed"
	desc = tournament.03.desc
	theme = crown

	left_portrait = {
		character = scope:activity.activity_owner
		animation = sadness
	}
	immediate = {

		scope:activity = {
			activity_owner = {
				remove_character_flag = holding_tournament
			}
			every_participant = {
				remove_character_flag = invited_to_tournament
			}
	
		}


		every_player = {
			trigger_event = tournament.99
		}
	}

	option = {
		name = tournament.03.option
		stress_impact = {
			base = minor_stress_impact_gain
		}
	}
}

tournament.04 = { # Tournament is about to start, knights have arrived.
	type = character_event
	title = tournament.04.title #all the knights have arrived, throw a feast beforehand.
	desc = tournament.04.desc #triggered desc
	

	left_portrait = {
		character = scope:activity.activity_owner
		animation = happiness
	}

	immediate = {

		if = {
			limit = {
				NOT = {
					has_global_variable = jousting_era
				}
			}
			scope:activity = {
				every_participant = {
					trigger_event = {
						on_action = tournament_feast_event_selection
						days = 10
					}
					# trigger_event = {
					# 	id = tournament.0809
					# 	days = 65
					# }
					# trigger_event = { # Closing Feast
					# on_action = tournament_closing_selection 
					# days = 70
					# }
					if = {
						limit = {
							NOT = {
								has_character_flag = host_not_fighting
							}
						}
						trigger_event = {
							id = tournament.0100
							days = 30
						}
						trigger_event = {
							id = tournament.0101
							days = 31
						}
					}

				}
			}
		}


		every_player = {
			trigger_event = tournament.99
		}
	}

	option = {
		name = tournament.04.option.a
		trigger = {
			OR = {
				AND = {
					faith = {
						has_doctrine = doctrine_gender_male_dominated
					}
					is_male = yes
				}
				#In female dominated societies, only women can participate.
				AND = {
					faith = {
						has_doctrine = doctrine_gender_female_dominated
					}
					is_female = yes
				}
				#In equal gendered societies, anyone can participate.
				faith = {
					has_doctrine = doctrine_gender_equal
				}
			}
		}
		custom_tooltip = tournament.04.option.a.tt		
	}

	option = {
		name = tournament.04.option.b
		custom_tooltip = tournament.04.option.b.tt
		add_character_flag = host_not_fighting
	}
}


tournament.05 = {
	type = letter_event


	option = {
		scope:activity = {
			invite_character_to_activity = root
			accept_invitation_for_character = root
		}
		scope:activity.activity_owner = {
			change_variable = {
				name = num
				add = 1
			}
		}
	}
	option = {
	}
}


tournament.07 = { #You get drunk and kill someone



	immediate = {
		
		scope:activity = {
			every_participant = {
				limit = {
					is_ai = no
				}
				trigger_event = {
					on_action = tournament_dance_event_selection
					days = 10
				}
			}
		}

	}

	option = {

	}
}
tournament.08 = { # Befriend Feast
	title = tournament.08.title
	desc = tournament.08.desc
	theme = feast_activity

	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:tournament_friend
		animation = ecstasy
	}

	trigger = {
		scope:activity = {
			any_participant = {
				is_ai = yes
				NOR = {
					has_relation_friend = root
					has_relation_best_friend = root
					has_relation_lover = root
					has_relation_soldier_friend = root
					has_relation_nemesis = root
					has_relation_rival = root
					this = root	
				}
				number_of_personality_traits_in_common = {
					target = root
					value >0
				}
			}
		}
	}

	immediate = {
		play_music_cue = "mx_cue_low_key_positive"
		scope:activity = {
			random_participant = {
				limit = {
					is_ai = yes
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
						has_relation_lover = root
						has_relation_soldier_friend = root
						has_relation_nemesis = root
						has_relation_rival = root
						this = root		
					}
					number_of_personality_traits_in_common = {
						target = root
						value >0
					}
				}
				save_scope_as = tournament_friend
			}
		}


				trigger_event = {
					on_action = tournament_dance_event_selection
					days = 10
				}
			
		
		




	}

	option = {
		name = tournament.08.option.a
		set_relation_friend = scope:tournament_friend

		ai_chance = {
			base = 0
		}

	}
	option = { # Arrogant Nobleman refuses to be friends with a lowborn, even if they are a knight.
	name = tournament.08.option.b
		trigger = {
			AND = {
				root = {
					AND = {
						is_lowborn = no
						has_trait = arrogant
					}
				}
				scope:tournament_friend = {
					is_lowborn = yes
				}
			}

		}
		ai_chance = {
			base = 100
		}
	}
}
tournament.09 = { # Rival Feast
	title = tournament.08.title
	desc = tournament.08.desc
	theme = feast_activity

	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:tournament_rival
		animation = anger
		# triggered_animation = {
		# 	trigger = {

		# 	}

		# }
	}

	theme = feast_activity


	trigger = {
		scope:activity = {
			any_participant = {
				is_ai = yes
				NOR = {
					has_relation_friend = root
					has_relation_best_friend = root
					has_relation_lover = root
					has_relation_soldier_friend = root
					has_relation_nemesis = root
					has_relation_rival = root			
				}
				number_of_opposing_personality_traits = {
					target = root
					value >0
				}
			}
			
		}

	}

	immediate = {
		
		play_music_cue = "mx_cue_negative"
		
		scope:activity = {
			random_participant = {
				limit = {
					is_ai = yes
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
						has_relation_lover = root
						has_relation_soldier_friend = root
						has_relation_nemesis = root
						has_relation_rival = root			
					}
					number_of_opposing_personality_traits = {
						target = root
						value >0
					}
				}
				save_scope_as = tournament_rival
			}
		}




		trigger_event = {
			on_action = tournament_dance_event_selection
			days = 10
		}
	}

	option = {

	}
}
tournament.10 = { #Regular Feast
	title = tournament.10
	desc = tournament.10
	theme = feast_activity



	immediate = {

		




		trigger_event = {
			on_action = tournament_dance_event_selection
			days = 10
		}
	}

	option = {

	}
}
tournament.11 = { # Awful Dance

	left_portrait = {
		character = root
		animation = shame
	}
	right_portrait = {
		character = scope:courtier
		animation = disapproval
	}
	theme = mental_break


	override_background = {
		event_background = sitting_room
	}

	immediate = {
		

		play_music_cue = " mx_cue_stress"

		every_courtier_or_guest	= {
			if = {
				limit = {
					root = {
						has_sexuality = heterosexual
					}
					sex_opposite_of	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						has_sexuality = homosexual
					}
					sex_same_as	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						OR = {
							has_sexuality = bisexual
							has_sexuality = asexual
						}
					}
				}
				save_scope_as = courtier
			}
		}

	}

	option = {

	}
}
tournament.12 = { # Inspiring Dance
	title = tournament.12.title
	desc = tournament.12.desc

	left_portrait = {
		character = root
		animation = flirtation
	}
	right_portrait = {
		character = scope:courtier
		animation = love
	}
	theme = love
	override_background = {
		event_background = sitting_room
	}
	trigger ={
		NOT = {
			has_character_flag = host_not_fighting
		}
	}


	immediate = {
		play_music_cue = "mx_cue_marriage"

		every_courtier_or_guest	= {
			if = {
				limit = {
					root = {
						has_sexuality = heterosexual
					}
					sex_opposite_of	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						has_sexuality = homosexual
					}
					sex_same_as	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						OR = {
							has_sexuality = bisexual
							has_sexuality = asexual
						}
					}
				}
				save_scope_as = courtier
			}
		}

	}

	option = {
		name = tournament.12.option.a

	}
}
tournament.13 = { # Regular Dance

	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:courtier
		animation = happiness

	}

	theme = friendly


	override_background = {
		event_background = sitting_room
	}

	immediate = {

		play_music_cue = "mx_cue_banquet"

		every_courtier_or_guest	= {
			if = {
				limit = {
					root = {
						has_sexuality = heterosexual
					}
					sex_opposite_of	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						has_sexuality = homosexual
					}
					sex_same_as	= root		
				}
				save_scope_as = courtier
			}
			else_if = {
				limit = {
					root = {
						OR = {
							has_sexuality = bisexual
							has_sexuality = asexual
						}
					}
				}
				save_scope_as = courtier
			}
		}

	}

	option = {

	}
}

#Kingdoms can license tournaments,making them occur more frequently, be larger in size. But perhaps makes factions occur more easily, or gives a scheme debuff.
#Kingdoms can prohibti tournaments, tournaments can still be held but at a risk to the character. It gives a stability bonus to the realm perhaps but you lose the potential prowess buffs for your knights.
#Pope can issue bulls about tournaments, which gives those who join a chance of beign excommunicated.
#Mid to late 1200s, Jousts appear.
#Behourds, Roundstables, Melees



#Types of tournament

#There was a very wide range, can classify them into tthree types
#Original mass tournament, the melee proper, fought between two teams of knights either in the open field or in the lists, the field tournament without enclosing barriers in the 12th century does not seem to have survived beyond the 13th century.
#The mass tournament, gives way in the late 14th century to the individual gjoust, whcih first appears in the late 12th century, but only reaches its most developed form with the tilt down the centre of the lists in the early 15th century.
#Practice tournament,


#Reasons for holding tournaments
#Held because the participants enjoyed them
#Held during sieges. (not good for gameplay, maybe a flavor event.
#End of campaign could be marked by jousts or tournaments.
#Knighting ceremonies
#Coronations
#Diplomatic Meetings
#Weddings
#Prizes were generally items, can abstract to gold.


#Wake up on the day of the event, town background

	tournament.014 = {  #Tournament Ends because Host dies.
		title = tournament.014.title
		desc = tournament.014.desc
		theme = death


		left_portrait = {
			character = root
			animation = worry
		}

		right_portrait = {
			character = scope:activity.activity_owner
			animation = worry
		}
		

		immediate = {
			play_music_cue = "mx_cue_succession"

			remove_variable = prowess_gained
			remove_variable = gold_earned
			remove_variable = number_of_captures
			remove_variable = number_of_times_captured
			remove_variable = capture_diff
			remove_variable = EVENT_COUNTER
	
		}
		
		option = {
			name = tournament.014.option
		}
	}

	tournament.030 = {
		title = tournament.030.title
		desc = tournament.030.desc

		left_portrait = {
			character = root
			animation = anger
		}
		right_portrait = {
			character = scope:opponent
			animation = anger
		}
		override_background = {
			event_background = terrain_activity

		}
		trigger = {
			scope:activity = {
				any_participant = {
					is_alive = yes
					is_imprisoned = no
					is_incapable = no
					NOR = {
						this = root
						has_character_flag = host_not_fighting
						has_character_flag = is_in_melee_duel
					}
				}
			}
		}


		immediate = {

			if = {
				limit = {
					var:EVENT_COUNTER <= 3
				}
			
				add_character_flag = is_in_melee_duel

				scope:activity = {
					random_participant = {
						limit = {			
							is_alive = yes
							is_imprisoned = no
							is_incapable = no

							NOR = {
								this = root
								has_character_flag = host_not_fighting
								has_character_flag = is_in_melee_duel
							}

						}
						save_scope_as = opponent

					}
				}


					#Probability of Opponent attacking you before you get a chance to attack them.
				random_list = {
					0 = { #Opponent attacks you
						modifier = {
							scope:opponent = {
								OR = {
									has_trait = aggressive_attacker
									has_trait = impatient
									has_trait = lunatic
									has_trait = wrathful
									has_trait = brave
								}
							}
							add = 50
						}
						modifier = {
							add = scope:opponent.melee_attack_chance
						}

						modifier = {
							scope:opponent.melee_attack_chance > root.melee_defense_chance
							add = 25
						}

						modifier = {  #Opponent is going to definitely attack you if they or on horseback and you are not.
							AND = {
								scope:opponent = {
									has_variable = on_horseback
								}
								root = {
									NOT = {
										has_variable = on_horseback
									}
								}
							}
							add = 200
						}



						# scope:opponent = {
						# 	add_character_flag = opponent_attacking
						# }
					}



					0 = { # Opponent does not atack you
						modifier = {
							scope:opponent = {
								OR = {
									has_trait = patient
									has_trait = craven
									has_trait = calm
									has_trait = cautious_leader
									has_trait = unyielding_defender
									has_trait = wounded_1
									has_trait = wounded_2
									has_trait = wounded_3
									has_trait = maimed
								}
							}
							add = 50
						}
						modifier = {
							add = scope:opponent.melee_defense_chance
						}
						modifier = {
							scope:opponent.melee_defense_chance > root.melee_attack_chance
							add = 25
						}
						modifier = {  #Opponent is going to avoid attacking you if they are not on horseback and you are.
							AND = {
								scope:opponent = {
									NOT ={
										has_variable = on_horseback
									}	
								}		
								root = {
									has_variable = on_horseback
									
								}
							}
							add = 200
						}
					}
				}

				# Calculating the percent chance of success for either attacking or defending.
				set_variable = {
					name = chance_of_attack_success
					value = root.melee_attack_chance
				}

				set_variable = {
					name = chance_of_attack_success_temp
					value = scope:opponent.melee_defense_chance
				}
				change_variable = {
					name = chance_of_attack_success_temp
					add = root.melee_attack_chance
				}

				change_variable = {
					name = chance_of_attack_success
					divide = var:chance_of_attack_success_temp
				}
				change_variable = {
					name = chance_of_attack_success
					multiply = 100
				}
				remove_variable = chance_of_attack_success_temp



				set_variable = {
					name = chance_of_defense_success
					value = root.melee_defense_chance
				}

				set_variable = {
					name = chance_of_defense_success_temp
					value = scope:opponent.melee_attack_chance
				}
				change_variable = {
					name = chance_of_defense_success_temp
					add = root.melee_defense_chance
				}

				change_variable = {
					name = chance_of_defense_success
					divide = var:chance_of_defense_success_temp
				}
				change_variable = {
					name = chance_of_defense_success
					multiply = 100
				}
				remove_variable = chance_of_defense_success_temp

			}
			else = {
				trigger_event = tournament.0999
			}
		}

		option = { # You attack your opponent
			name = tournament.030.option.a
			trigger = {
				NOT = {
					scope:opponent = {
						has_character_flag = opponent_attacking
					}
				}
			}
			hidden_effect = {
				trigger_event = tournament.031
			}

			custom_tooltip = tournament.030.option.a.tt
		}

		
		# option = { # Opponent attacks you
		# 	name = tournament.030.option.b
		# 	trigger = {
		# 		scope:opponent = {
		# 			has_character_flag = opponent_attacking
		# 		}
		# 	}

		# 	hidden_effect = {
		# 		random_list = {
		# 			0 = { # It goes well
		# 				modifier = {
		# 					add = var:chance_of_attack_success
		# 				}
		# 				trigger_event = tournament.033

		# 			}

		# 			0 = { #It goes poorly
		# 				modifier = {
		# 					add = var:chance_of_defense_success
		# 				}
		# 				trigger_event = tournament.034
		# 			}
		# 		}
		# 	}
		# 	custom_tooltip = tournament.030.option.b.tt
		# }
	}


	tournament.031 = { # You attack your opponent
		title = tournament.031.title
		
		desc = {
			first_valid = {
				triggered_desc = {   # We are both on horseback, we knock them off, and capture them.
					trigger = {
						tournament.030.outcome.a = yes
					}
					desc = tournament.031.desc.a
				}
				triggered_desc = {   # We are both on horseback, we knock them off but they recover and will enter a duel.
					trigger = {
						tournament.030.outcome.b = yes
					}
					desc = tournament.031.desc.b
				}

				triggered_desc = {   # We are both on horseback, we get knocked off and get captured.
					trigger = {
						tournament.030.outcome.c = yes
					}
					desc = tournament.031.desc.c
				}
				triggered_desc = {   # We are both on horseback, we get knocked off but recover and will enter a duel
					trigger = {
						tournament.030.outcome.d = yes

					}
					desc = tournament.031.desc.d
				}
				triggered_desc = {   # Opponent is on horseback, but we are not, we knock them off and capture them
					trigger = {
						tournament.030.outcome.e = yes
					}
					desc = tournament.031.desc.e
				}
				triggered_desc = {   # Opponent is on horseback, but we are not, we knock them off but they recover and will enter a duel
					trigger = {
						tournament.030.outcome.f = yes
					}
					desc = tournament.031.desc.f
				}
				triggered_desc = {   # Opponent is on horseback, but we are not, we are beat into submission.
					trigger = {
						tournament.030.outcome.g = yes
					}
					desc = tournament.031.desc.g
				}

				triggered_desc = { # Opponent is NOT on horseback, but we ARE, and we beat them into submission
					trigger = {
						tournament.030.outcome.h = yes
					}
					desc = tournament.031.desc.h
				}
				triggered_desc = { # Opponent is NOT on horseback, but we ARE, and they knock us off and capture us
					trigger = {
						tournament.030.outcome.i = yes
					}
					desc = tournament.031.desc.i
				}
				triggered_desc = { # Opponent is NOT on horseback, but we ARE, and they knock us off but we recover and will enter a duel
					trigger = {
						tournament.030.outcome.j = yes
					}
					desc = tournament.031.desc.j
				}
				triggered_desc = { # Opponent is NOT on horseback, and NEITHER are we. Enter a duel immediately.
					trigger = {
						tournament.030.outcome.k = yes
					}
					desc = tournament.031.desc.k
				}
			}
		}

		left_portrait = {
			character = root
			animation = idle
		}
		right_portrait = {
			character = scope:opponent
			animation = idle
		}

		override_background = {
			event_background = terrain_activity
		}

	
		immediate = {
			play_music_cue = "mx_cue_combat_2"


			change_variable = {
				name = EVENT_COUNTER
				add = 1
			}

			if = {  # Opponent is on horseback
				limit = {
					scope:opponent = {
						has_variable = on_horseback
					}
				}
				if = { # And we are also on horseback
					limit = {
						root = {
							has_variable = on_horseback
						}
					}
					random_list = { # If so we do knock them off?

						0 = { #Knock them off
							modifier = {
								add = root.melee_attack_chance
							}
							add_character_flag = knocked_opponent_off

							random_list = {  # If they are knocked off, there is a chance they can recover and enter a duel.
		
								40 = { # They don't recover, we capture them.

									add_character_flag = captured_opponent
									# Update stats for winner(root wins)
									tournament_update_stats_root_won = yes

									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}

								}								


								50 = { # They recover, and pull us down, we duel.
									modifier = {
										add = scope:opponent.knocked_off_chance_to_recover
									}

									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}
									add_character_flag = tournament_duel					
								}
							}
						}

						0 = { #Get knocked off
							modifier = {
								add = scope:opponent.melee_defense_chance
							}
							add_character_flag = got_knocked_off


							random_list = {  # If we are knocked off, there is a chance we can recover and enter a duel.

								40 = { # We don't recover, we get captured

									add_character_flag = got_captured

									# Update stats for winner(opponent wins)
									tournament_update_stats_root_lost = yes

									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}

								}
								50 = { # We recover, and pull them down, we duel.

									modifier = {
										add = root.knocked_off_chance_to_recover
									}

									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}














									add_character_flag = tournament_duel
								}
							}
						}
					}
				}
				else = { # We are not also on horseback.
					random_list = {
						0 = { #Knock them off
							modifier = {
								add = root.melee_attack_chance
							}
							add_character_flag = knocked_opponent_off



							random_list = { # If they are knocked off, there is a chance they can recover and enter a duel.
								40 = { # They don't recover, we capture them.

									add_character_flag = captured_opponent


									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}













									# Update stats for winner(root wins)

									tournament_update_stats_root_won = yes



								}
								50 = { # They recover, duel.
									modifier = {
										add = scope:opponent.knocked_off_chance_to_recover
									}


									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}











									add_character_flag = tournament_duel					
								}
							}		
						}
						10 = { #Beaten into submission
							modifier = {
								add = scope:opponent.melee_defense_chance
							}

							random = {
								chance = root.tournament_injury_chance
								if = {
									limit = {
										NOR = {
											has_trait = wounded_1
											has_trait = wounded_2
											has_trait = wounded_3
											has_trait = maimed
										}
									}
									add_character_flag = wounded_1_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_1
									}
									add_character_flag = wounded_2_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_2
									}
									add_character_flag = wounded_3_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_3
									}
									add_character_flag = maimed_in_fight
								}
							}


							add_character_flag = got_beaten_into_submission

							tournament_update_stats_root_lost = yes
						}
					}
				}
			}

			else = { # Opponent is not on horseback

				if = { # And we are on horseback
					limit = {
						root = {
							has_variable = on_horseback
						}
					}
					random_list = { # If so we do beat them into submission?
						10 = { #Beat them into submission
							modifier = {
								add = root.melee_attack_chance
							}
							add_character_flag = beat_opponent_into_submission


							random = {
								chance = root.tournament_injury_chance
								if = {
									limit = {
										NOR = {
											has_trait = wounded_1
											has_trait = wounded_2
											has_trait = wounded_3
											has_trait = maimed
										}
									}
									add_character_flag = wounded_1_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_1
									}
									add_character_flag = wounded_2_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_2
									}
									add_character_flag = wounded_3_in_fight
								}
								else_if = {
									limit = {
										has_trait = wounded_3
									}
									add_character_flag = maimed_in_fight
								}
							}

								tournament_update_stats_root_won = yes

						}

						0 = { # Get knocked off
							modifier = {
								add = scope:opponent.melee_defense_chance
							}	
							add_character_flag = got_knocked_off

							random_list = { # If we are knocked off, there is a chance we can recover and enter a duel.
								40 = { # We don't recover, they capture us

								random = {
									chance = root.tournament_injury_chance
									if = {
										limit = {
											NOR = {
												has_trait = wounded_1
												has_trait = wounded_2
												has_trait = wounded_3
												has_trait = maimed
											}
										}
										add_character_flag = wounded_1_in_fight
									}
									else_if = {
										limit = {
											has_trait = wounded_1
										}
										add_character_flag = wounded_2_in_fight
									}
									else_if = {
										limit = {
											has_trait = wounded_2
										}
										add_character_flag = wounded_3_in_fight
									}
									else_if = {
										limit = {
											has_trait = wounded_3
										}
										add_character_flag = maimed_in_fight
									}
								}
									add_character_flag = got_captured
									# Update stats for winner(opponent wins)
										tournament_update_stats_root_lost = yes
								}
								50 = { # We recover, duel.
									modifier = {
										add = root.knocked_off_chance_to_recover
									}
									
									add_character_flag = tournament_duel	
									
									random = {
										chance = root.tournament_injury_chance
										if = {
											limit = {
												NOR = {
													has_trait = wounded_1
													has_trait = wounded_2
													has_trait = wounded_3
													has_trait = maimed
												}
											}
											add_character_flag = wounded_1_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_1
											}
											add_character_flag = wounded_2_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_2
											}
											add_character_flag = wounded_3_in_fight
										}
										else_if = {
											limit = {
												has_trait = wounded_3
											}
											add_character_flag = maimed_in_fight
										}
									}
								}
							}
						}
					}
				}

				else = { # Neither of us are on horseback - duel engine time
					add_character_flag = tournament_duel
				}
			}
		}


			# if = { # If we successfully captured our opponent..
			# 	limit = {
			# 		has_character_flag = captured_opponent
			# 	}

			# 	random_list = { # Did the horses run off?

			# 		25 = { # Yes they did
			# 			add_character_flag = horses_ran_off
			# 			remove_variable = on_horseback

			# 		}

			# 		75 = { # No they did not
					
			# 		}
			# 	}
			# }



	

		option = {
			name = "capture"
			trigger = {
				NOT = {
					has_character_flag = tournament_duel
				}
			}

			if = {
				limit = {
					has_character_flag = wounded_1_in_fight
				}
				add_trait = wounded_1
				remove_character_flag = wounded_1_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_2_in_fight
				}
				add_trait = wounded_2
				remove_character_flag = wounded_2_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_3_in_fight
				}
				add_trait = wounded_3
				remove_character_flag = wounded_3_in_fight
			}

			if = {
				limit = {
					has_character_flag = maimed_in_fight
				}
				add_trait = maimed
				remove_character_flag = maimed_in_fight
			}









			hidden_effect = {
				remove_tournament.030_flags = yes
			}

			trigger_event = tournament.0999
		}

		option = {
			name = "aggressive stance"

			trigger = {
				has_character_flag = tournament_duel
			}

			if = {
				limit = {
					has_character_flag = wounded_1_in_fight
				}
				add_trait = wounded_1
				remove_character_flag = wounded_1_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_2_in_fight
				}
				add_trait = wounded_2
				remove_character_flag = wounded_2_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_3_in_fight
				}
				add_trait = wounded_3
				remove_character_flag = wounded_3_in_fight
			}

			if = {
				limit = {
					has_character_flag = maimed_in_fight
				}
				add_trait = maimed
				remove_character_flag = maimed_in_fight
			}

			hidden_effect = {
				add_character_flag = aggressive_stance
			}

			trigger_event = tournament.032

			ai_chance = {
				base = 33
				modifier = {
					add = aggressive_stance_chance
				}
			}
		}

		option = {
			name = "balanced stance"
			trigger = {
				has_character_flag = tournament_duel
			}

			if = {
				limit = {
					has_character_flag = wounded_1_in_fight
				}
				add_trait = wounded_1
				remove_character_flag = wounded_1_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_2_in_fight
				}
				add_trait = wounded_2
				remove_character_flag = wounded_2_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_3_in_fight
				}
				add_trait = wounded_3
				remove_character_flag = wounded_3_in_fight
			}

			if = {
				limit = {
					has_character_flag = maimed_in_fight
				}
				add_trait = maimed
				remove_character_flag = maimed_in_fight
			}

			hidden_effect = {
				add_character_flag = balanced_stance
			}

			trigger_event = tournament.032

			ai_chance = {
				base = 33
				modifier = {
					add = balanced_stance_chance
				}
			}

		}

		option = {
			name = "defensive stance"
			trigger = {
				has_character_flag = tournament_duel
			}

			if = {
				limit = {
					has_character_flag = wounded_1_in_fight
				}
				add_trait = wounded_1
				remove_character_flag = wounded_1_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_2_in_fight
				}
				add_trait = wounded_2
				remove_character_flag = wounded_2_in_fight
			}
			if = {
				limit = {
					has_character_flag = wounded_3_in_fight
				}
				add_trait = wounded_3
				remove_character_flag = wounded_3_in_fight
			}

			if = {
				limit = {
					has_character_flag = maimed_in_fight
				}
				add_trait = maimed
				remove_character_flag = maimed_in_fight
			}

			hidden_effect = {
				add_character_flag = defensive_stance
			}

			trigger_event = tournament.032


			ai_chance = {
				base = 33
				modifier = {
					add = defensive_stance_chance
				}
			}
		}
	}

	tournament.032 = {
		hidden = yes

		immediate = {
			# Opponent picks a stance.
			random_list = {
				33 = {
					modifier = {
						add = scope:opponent.aggressive_stance_chance
					}
					add_character_flag = opponent_aggressive
				}

				33 = {
					modifier = {
						add = scope:opponent.balanced_stance_chance
					}
					add_character_flag = opponent_balanced

				}

				33 = {
					modifier = {
						add = scope:opponent.defensive_stance_chance
					}
					add_character_flag = opponent_defensive
				}
			}

			# Duel outcome

			random_list = {
				0 = { # You win

					modifier = {
						has_character_flag = opponent_defensive
						add = root.melee_attack_chance
					}
					modifier = {
						has_character_flag = opponent_aggressive
						add = root.melee_defense_chance
					}
					
					modifier = {
						has_character_flag = opponent_balanced
						add = {
							value = root.melee_defense_chance
				
							multiply = 0.44
						}
						add = {
							value = root.melee_attack_chance
							multiply = 0.44
						}
					}
						
					modifier = {
						root.duel_stance_modifier < 0
						add = root.duel_stance_modifier_abs_value
					}
					add_character_flag = won_duel


					random = {
						chance = root.swordsmanship_upgrade_chance
						add_character_flag = improve_fighting_skill
					}
					
				}

				0 = { # Draw?
					add_character_flag = drew_duel
				}

				0 = { # You lose

					modifier = {
						has_character_flag = opponent_defensive
						add = scope:opponent.melee_defense_chance
					}
					modifier = {
						has_character_flag = opponent_aggressive
						add = scope:opponent.melee_attack_chance
					}
					
					modifier = {
						has_character_flag = opponent_balanced
						add = {
							value = scope:opponent.melee_defense_chance			
							multiply = 0.44
						}
						add = {
							value = scope:opponent.melee_attack_chance
							multiply = 0.44
						}
					}				
					modifier = {
						root.duel_stance_modifier < 0
						add = root.duel_stance_modifier_abs_value
					}
					add_character_flag = lost_duel
				}
			}

			trigger_event = tournament.033
		}
	}



	tournament.033 = { 
		title = tournament.033.title

		left_portrait = {
			character = root
			triggered_animation = {
				trigger = {
					has_character_flag = won_duel
				}
				animation = war_over_win
			}
			triggered_animation = {
				trigger = {
					has_character_flag = drew_duel
				}
				animation = personality_bold
			}
			triggered_animation = {
				trigger = {
					has_character_flag = lost_duel
				}
				animation = severelywounded
			}
			animation = war_attacker
		}
		right_portrait = {
			character = scope:opponent
			triggered_animation = {
				trigger = {
					has_character_flag = won_duel
				}
				animation = severelywounded
			}
			triggered_animation = {
				trigger = {
					has_character_flag = drew_duel
				}
				animation = personality_bold
			}
			triggered_animation = {
				trigger = {
					has_character_flag = lost_duel
				}
				animation = war_over_win
			}
			animation = war_attacker
		}
		
		override_background = {
			event_background = terrain_activity
		}

		immediate = {
			
			#Chance to increase prowess skill if you haven't already increased it twice this tournament. 

			if = {
				limit = {
					var:prowess_gained < 2
				}
				random = {
					chance = root.prowess_gain_chance
					add_prowess_skill =1
					change_variable = {
						name = prowess_gained
						add = 1
					}
				}	
			}

			
		}

		option = {
			name = tournament.033.option.a
			trigger = {
				has_character_flag = won_duel
			}
			hidden_effect = {
				remove_tournament.030_flags = yes
				remove_tournament.033_flags = yes	
				tournament_update_stats_root_won = yes
			}

			# Improve fighting skill if triggered.
			
			if = {
				limit = {
					has_character_flag = improve_fighting_skill
				}
				tournament_upgrade_swordsmanship = yes
			}
			



















			trigger_event = tournament.0999		
		}

		option = {
			name = tournament.033.option.b
			trigger = {
				has_character_flag = drew_duel
			}

			trigger_event = tournament.0999
		}

		option = {
			name = tournament.033.option.c
			trigger = {
				has_character_flag = lost_duel
			}
			hidden_effect = {
				remove_tournament.030_flags = yes
				remove_tournament.033_flags = yes
				tournament_update_stats_root_lost = yes		
			}		
			trigger_event = tournament.0999
		}
	}

		


	tournament.0100 = {
		title = "Morning Before"
		desc = ""

		override_background = {
			event_background = market_west
		}
		trigger = {
			exists = scope:activity
		}

		immediate = {
		}
		option = {

		}
	}

#About to begin the melee

	tournament.0101 = {
		title = "The Tournament Begins!"
		desc = ""

		override_background = {
			event_background = terrain_activity
		}
		trigger = {
			exists = scope:activity
		}
		immediate = {
			play_music_cue = "mx_cue_war_declared"

			if = {
				limit = {
					NOT = {
						has_character_flag = host_not_fighting
					}
				}
				set_variable = {
					name = number_of_captures
					value = 0
				}
				set_variable = {
					name = number_of_times_captured
					value = 0
				}
				set_variable = { 
					name = gold_earned
					value = 0
				}
				set_variable = {
					name = prowess_gained
					value = 0
				}

				set_variable = on_horseback

				trigger_event = tournament.0999
			}
		}
		option = {
			name = tournament.0101.option.a
			trigger = {
				NOT = {
					has_character_flag = host_not_fighting
				}
			}

		}
		option = {
			name = tournament.0101.option.b
			trigger = {
				has_character_flag = host_not_fighting
			}
		}
	}

	# tournament.0800 = { #Encounter with another Knight. Fight
	# 	title = ""
	# 	desc = ""

	# 	left_portrait = {
	# 		character = scope:winner
	# 		animation = personality_bold
	# 	}
	# 	right_portrait = {
	# 		character = scope:loser
	# 		animation = shame
	# 	}

	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}
	# 	trigger = {
	# 		scope:activity = {
	# 			any_participant = {
	# 				is_alive = yes
	# 				NOT = {
	# 					has_character_flag = host_not_fighting
	# 				}
	# 			}
	# 		}
	# 	}


	# 	immediate = {
	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}
	# 		scope:activity = {
	# 			random_participant = {
	# 				limit = {			
	# 					is_alive = yes
	# 					is_imprisoned = no
	# 					is_incapable = no

	# 					NOR = {
	# 						this = root
	# 						has_character_flag = host_not_fighting
	# 					}

	# 				}
	# 				save_scope_as = opponent
	# 			}
	# 		}
				

	# 		random_list = {
	# 			0 = {
	# 				modifier = {
	# 					add = root.melee_chance
	# 				}
					
	# 				root = {
	# 					save_scope_as = winner
	# 				}
	# 				scope:opponent = {
	# 					save_scope_as = loser
	# 				}
	# 			}

	# 			0 = {
	# 				modifier = {
	# 					add = scope:opponent.melee_chance
	# 				}
			
	# 				root = {
	# 					save_scope_as = loser
	# 				}
	# 				scope:opponent = {
	# 					save_scope_as = winner
	# 				}
	# 			}
	# 		}


	# 		if = {
	# 			limit = {
	# 				exists = scope:winner
	# 			}
	# 			scope:winner = {
	# 				if = {
	# 					limit = {
	# 						has_variable = number_of_captures
	# 					}
	# 					change_variable = {
	# 						name = number_of_captures
	# 						add = 1
	# 					}
	# 				}
	# 				else = {
	# 					set_variable = {
	# 						name = number_of_captures
	# 						value = 1
	# 					}
	# 				}
		
	# 				if = {
	# 					limit = {
	# 						has_variable = gold_earned
	# 					}
	# 					change_variable = { 
	# 						name = gold_earned
	# 						add = scope:loser.ransom_value
	# 					}
	# 				}
	# 				else = {
	# 					set_variable = {
	# 						name = gold_earned
	# 						value = scope:loser.ransom_value
	# 					}
	# 				}
	# 			}
	# 		}

	# 		if = {
	# 			limit = {
	# 				exists = scope:loser
	# 			}
	# 			scope:loser = {
				
	# 				if = {
	# 					limit ={
	# 						has_variable = number_of_times_captured
	# 					}
	# 					change_variable = {
	# 						name = number_of_times_captured
	# 						add = 1
	# 					}
	# 				}
	# 				else = {
	# 					set_variable = {
	# 						name = number_of_times_captured
	# 						value = 1
	# 					}
	# 				}
		
	# 				if = {
	# 					limit = {
	# 						has_variable = gold_earned
	# 					}
	# 					change_variable = { 
	# 						name = gold_earned
	# 						subtract = scope:loser.ransom_value
	# 					}
	# 				}
	# 				else = {
	# 					set_variable = {
	# 						name = gold_earned
	# 						value = 0
	# 					}
	# 					change_variable = {
	# 						name = gold_earned
	# 						subtract = scope:loser.ransom_value
	# 					}
	# 				}
	# 			}
	# 		}



	# 		if = {
	# 			limit = {
	# 				exists = scope:winner
	# 				root = scope:winner
	# 			}
	# 			random_list = {
	# 				0 = {
	# 					modifier = {
	# 						add = root.swordsmanship_upgrade_chance
	# 					}
	# 					add_character_flag = improve_fighting_skill  # Just so we can change in the option, rather than immediately.
	# 				}
					
	# 				50 = {

	# 				}
	# 			}
	# 		}

	# 		#Chance to increase prowess skill if you haven't already increased it twice this tournament. 

	# 		if = {
	# 			limit = {
	# 				var:prowess_gained < 2
	# 			}
	# 			random_list = {
	# 				0 = {
	# 					modifier = {
	# 						add = root.prowess_gain_chance
	# 					}
	# 					add_prowess_skill = 1
	# 					change_variable = {
	# 						name = prowess_gained
	# 						add = 1
	# 					}
	# 				}
	# 				50 = {
			
	# 				}
	# 			}
				
	# 		}



	# 		# Chance of getting injured.
			
	# 		random_list = {
	# 			0 = {
	# 				modifier = {
	# 					add = tournament_injury_chance
	# 				}
	# 				if = {
	# 					limit = {
	# 						NOR = {
	# 							has_trait = wounded_1
	# 							has_trait = wounded_2
	# 							has_trait = wounded_3
	# 							has_trait = maimed
	# 						}
	# 					}
	# 					add_character_flag = wounded_1_in_fight
	# 				}
	# 				else_if = {
	# 					limit = {
	# 						has_trait = wounded_1
	# 					}
	# 					add_character_flag = wounded_2_in_fight
	# 				}
	# 				else_if = {
	# 					limit = {
	# 						has_trait = wounded_2
	# 					}
	# 					add_character_flag = wounded_3_in_fight
	# 				}
	# 				else_if = {
	# 					limit = {
	# 						has_trait = wounded_3
	# 					}
	# 					add_character_flag = maimed_in_fight
	# 				}

	# 			}

	# 			80 = {
	# 				modifier = {
	# 					subtract = tournament_injury_chance
	# 				}
					

	# 			}
	# 		}

	# 		if = {
	# 			limit = {
	# 				var:EVENT_COUNTER <=3	
	# 			}
			
	# 			random_list = {
	# 				50 = {
	# 					modifier = {
	# 						positive_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_good_selection
	# 						days = 5
	# 					}
	# 				}
						

	# 				50 = {
	# 					modifier = {
	# 						negative_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					if = {
	# 						limit = {

	# 						}
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_bad_selection
	# 						days = 5
	# 					}
	# 				}
	# 			}
	# 		}
	# 		else = {
	# 			trigger_event = tournament.0807
	# 		}

	# 	}

	# 	option = {
	# 		if = {
	# 			limit = {
	# 				has_character_flag = improve_fighting_skill
	# 			}

	# 			if = {
	# 				limit = {
	# 					NOR = {
	# 						has_trait = poor_fighter
	# 						has_trait = trained_fighter
	# 						has_trait = skilled_fighter
	# 						has_trait = formidable_fighter
	# 					}
	# 				}
	# 				add_trait = poor_fighter
	# 				remove_character_flag = improve_fighting_skill

	# 			}
	# 			else_if = {
	# 				limit = {
	# 					has_trait = poor_fighter
	# 				}
	# 				hidden_effect = {
	# 					remove_trait = poor_fighter
	# 				}
	# 				add_trait = trained_fighter
	# 				remove_character_flag = improve_fighting_skill
	# 			}
	# 			else_if = {
	# 				limit = {
	# 					has_trait = trained_fighter
	# 				}
	# 				hidden_effect = {
	# 					remove_trait = trained_fighter
	# 				}
	# 				add_trait = skilled_fighter
	# 				remove_character_flag = improve_fighting_skill

	# 			}
	# 			else_if = {
	# 				limit = {
	# 					has_trait = skilled_fighter
	# 				}
	# 				remove_trait = skilled_fighter

	# 				add_trait = formidable_fighter
	# 				remove_character_flag = improve_fighting_skill

	# 			}
	# 		}

	# 		if = {
	# 			limit = {
	# 				has_character_flag = wounded_1_in_fight
	# 			}
	# 			add_trait = wounded_1
	# 			remove_character_flag = wounded_1_in_fight
	# 		}
	# 		if = {
	# 			limit = {
	# 				has_character_flag = wounded_2_in_fight
	# 			}
	# 			add_trait = wounded_2
	# 			remove_character_flag = wounded_2_in_fight
	# 		}
	# 		if = {
	# 			limit = {
	# 				has_character_flag = wounded_3_in_fight
	# 			}
	# 			add_trait = wounded_3
	# 			remove_character_flag = wounded_3_in_fight
	# 		}

	# 		if = {
	# 			limit = {
	# 				has_character_flag = maimed_in_fight
	# 			}
	# 			add_trait = maimed
	# 			remove_character_flag = maimed_in_fight
	# 		}
	# 	}
		

			
	# }

		
		
	
			

	# tournament.0802 = { #You and another knight team up on someone
	# 	title = ""
	# 	desc = ""



	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}

	# 	immediate = {
	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}
	# 		random_list = {
	# 			50 = {
	# 				modifier = {
	# 					positive_traits_tournament_small = yes
	# 					add = 5
	# 				}
	# 				modifier = {
	# 					positive_traits_tournament_medium = yes
	# 					add = 10
	# 				}
	# 				modifier = {
	# 					positive_traits_tournament_large = yes
	# 					add = 15
	# 				}
	# 				trigger_event = {
	# 					on_action = tournament_melee_good_selection
	# 					days = 5
	# 				}
	# 			}
				

	# 			50 = {
	# 				modifier = {
	# 					negative_traits_tournament_small = yes
	# 					add = 5
	# 				}
	# 				modifier = {
	# 					negative_traits_tournament_medium = yes
	# 					add = 10
	# 				}
	# 				modifier = {
	# 					negative_traits_tournament_large = yes
	# 					add = 15
	# 				}

	# 				trigger_event = {
	# 					on_action = tournament_melee_bad_selection
	# 					days = 5
	# 				}
	# 			}
	# 		}
	# 	}
	# 	option = {

	# 	}
	# }
	# tournament.0803 = { #You are teamed up on
	# 	title = ""
	# 	desc = ""


	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}
	# 	immediate = {

		
	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}


	# 		#Grab two knights.

	# 		scope:activity = {
	# 			random_participant = {
	# 				limit = {		
	# 					is_alive = yes
	# 					is_imprisoned = no
	# 					is_incapable = no
	# 					NOR = {
	# 						this = root
	# 						has_character_flag = host_not_fighting
	# 					}
	# 				}
	# 				save_scope_as = opponent_1
	# 			}
	# 			random_participant = {
	# 				limit = {		
	# 					is_alive = yes
	# 					is_imprisoned = no
	# 					is_incapable = no
	# 					NOR = {
	# 						this = root
	# 						has_character_flag = host_not_fighting
	# 						this = scope:opponent_1
	# 					}
	# 				}
	# 				save_scope_as = opponent_2
	# 			}
	# 		}


	# 		random_list = {
	# 			0 = {
	# 				modifier = {
	# 					add = root.melee_chance
	# 				}
					
	# 				root = {
	# 					save_scope_as = winner
	# 				}
	# 				scope:opponent = {
	# 					save_scope_as = loser
	# 				}
	# 			}

	# 			10 = {
	# 				modifier = {
	# 					add = scope:opponent_1.melee_chance
	# 					add = scope:opponent_2.melee_chance
	# 				}
			
	# 				root = {
	# 					save_scope_as = loser
	# 				}
	# 				scope:opponent_1 = {
	# 					save_scope_as = winner_1
	# 				}
	# 				scope:opponent_2 = {
	# 					save_scope_as = winner_2
	# 				}
	# 			}
	# 		}


			









	# 		if = {
	# 			limit = {
	# 				var:EVENT_COUNTER <=3	
	# 			}
			
	# 			random_list = {
	# 				50 = {
	# 					modifier = {
	# 						positive_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_good_selection
	# 						days = 5
	# 					}
	# 				}
						

	# 				50 = {
	# 					modifier = {
	# 						negative_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					if = {
	# 						limit = {

	# 						}
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_bad_selection
	# 						days = 5
	# 					}
	# 				}
	# 			}
	# 		}


	# 		else = {
	# 			trigger_event = tournament.0807
	# 		}




	# 	}
	# 	option = {
			
	# 	}
	# }

	# tournament.0804 = { # You accidentally killed someone
	# 	title = ""
	# 	desc = ""


	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}
	# 	immediate = {
	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}

	# 		if = {
	# 			limit = {
	# 				root = {
	# 					var:EVENT_COUNTER <= 3
	# 				}
	# 			}
	# 			random_list = {
	# 				50 = {
	# 					modifier = {
	# 						positive_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_good_selection
	# 						days = 5
	# 					}
	# 				}
					
		
	# 				50 = {
	# 					modifier = {
	# 						negative_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_large = yes
	# 						add = 15
	# 					}
		
	# 					trigger_event = {
	# 						on_action = tournament_melee_bad_selection
	# 						days = 5
	# 					}
	# 				}
	# 			}
	# 		}
	# 		else = {
	# 			trigger_event = {
	# 				id = tournament.0807
	# 				days = 5
	# 			}
	# 		}
	# 	}
	# 	option = {
			
	# 	}
	# }

	# tournament.0805 = { #You were accidently killed 
	# 	title = ""
	# 	desc = ""


	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}
	# 	immediate = {
	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}
	# 		if = {
	# 			limit = {
	# 				root = {
	# 					var:EVENT_COUNTER <= 3
	# 				}
	# 			}
	# 			random_list = {
	# 				50 = {
	# 					modifier = {
	# 						positive_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_good_selection
	# 						days = 5
	# 					}
	# 				}
					

	# 				50 = {
	# 					modifier = {
	# 						negative_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_large = yes
	# 						add = 15
	# 					}

	# 					trigger_event = {
	# 						on_action = tournament_melee_bad_selection
	# 						days = 5
	# 					}
	# 				}
	# 			}
	# 		}

	# 		else = {
	# 			trigger_event = {
					
	# 				id = tournament.0807
	# 				days = 5
	# 			}
	# 		}
	# 	}
	# 	option = {
			
	# 	}
	# }


	# tournament.0806 = { #drainage pipe meme event
	# 	title = ""
	# 	desc = ""


	# 	override_background = {
	# 		event_background = terrain_activity

	# 	}
	# 	immediate = {

	# 		root = {
	# 			change_variable = {
	# 				name = EVENT_COUNTER
	# 				add = 1
	# 			}
	# 		}

	# 		if = {
	# 			limit = {
	# 				root = {
	# 					var:EVENT_COUNTER <= 3
	# 				}
	# 			}
	# 			random_list = {
	# 				50 = {
	# 					modifier = {
	# 						positive_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						positive_traits_tournament_large = yes
	# 						add = 15
	# 					}
	# 					trigger_event = {
	# 						on_action = tournament_melee_good_selection
	# 						days = 5
	# 					}
	# 				}
					

	# 				50 = {
	# 					modifier = {
	# 						negative_traits_tournament_small = yes
	# 						add = 5
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_medium = yes
	# 						add = 10
	# 					}
	# 					modifier = {
	# 						negative_traits_tournament_large = yes
	# 						add = 15
	# 					}

	# 					trigger_event = {
	# 						on_action = tournament_melee_bad_selection
	# 						days = 5
	# 					}
	# 				}
	# 			}
	# 		}
	# 		else = {
	# 			trigger_event = {			
	# 				id = tournament.0807
	# 				days = 5
	# 			}
	# 		}
	# 	}
	# 	option = {
			
	# 	}
	# }

	tournament.0807 = {

		hidden = yes

		immediate = {

			change_variable = {
				name = EVENT_COUNTER
				add = 1
			}


			scope:activity = {
				random_participant = {
					limit = {
						
						is_alive = yes
						is_imprisoned = no
						is_incapable = no
						NOR = {
							this = root
							has_character_flag = host_not_fighting
						}
					}
					save_scope_as = opponent
				}
			}

			random = {
				chance = 50			
				add_character_flag = attack
			}
			random = {
				chance = 50
				add_character_flag = defense
			}

			random_list = {
				0 = {  #root wins

					modifier = {
						has_character_flag = attack
						add = root.melee_attack_chance
					}
					modifier = {
						has_character_flag = defense
						add = root.melee_defense_chance
					}

					tournament_update_stats_root_won = yes
					if = {
						limit = {
							has_character_flag = attack
						}
						remove_character_flag = attack
					}
					else = {
						remove_character_flag = defense
					}
				}

				0 = { #opponent wins

				modifier = {
					has_character_flag = attack
					add = scope:opponent.melee_defense_chance
				}
				modifier = {
					has_character_flag = defense
					add = scope:opponent.melee_attack_chance
				}

					tournament_update_stats_root_lost = yes

					if = {
						limit = {
							has_character_flag = attack
						}
						remove_character_flag = attack
					}
					else = {
						remove_character_flag = defense
					}
					
				}
			}

			if = {
				limit = {
					AND = {
						var:EVENT_COUNTER <10
						NOT = {
							has_character_flag = host_not_fighting
						}
					}
				}
				trigger_event = tournament.0807
			}

			else = {
				trigger_event = {
					id = tournament.0999
					days = 5
				}
			}
		}
	}


	tournament.0808 = {
		title = tournament.0808.title
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						root.performance_rating = -1
					}
					desc = tournament.0808.desc.poor
				}
				triggered_desc = {
					trigger = {
						root.performance_rating = 0
					}
					desc = tournament.0808.desc.ok
				}
				triggered_desc = {
					trigger = {
						root.performance_rating = 2
					}
					desc = tournament.0808.desc.moderate
				}
				triggered_desc = { 
					trigger = {
						root.performance_rating = 5
					}
					desc = tournament.0808.desc.great
				}
			}

		}
		
		left_portrait = {
			character = root
			triggered_animation = {
				trigger = {
					root.performance_rating = -1
				}
				animation = shame
			}
			triggered_animation = {
				trigger = {
					root.performance_rating = 0
				}
				animation = disgust
			}
			triggered_animation = {
				trigger = {
					root.performance_rating = 2
				}
				animation = personality_honorable
			}
			triggered_animation = {
				trigger = {
					root.performance_rating = 5
				}
				animation = personality_bold
			}
			animation = idle
		}

		override_background = {
			event_background = corridor_night
		}

		trigger = {
			exists = scope:activity
			NOT = {
				has_character_flag = enjoying_0808
			}
		}

		immediate = {
			add_character_flag = enjoying_0808


			set_variable = {
				name = capture_diff
				value = var:number_of_captures
			}
			change_variable = {
				name = capture_diff
				subtract = var:number_of_times_captured
			}

			trigger_event = {
				id = tournament.0809
				days = 5
			}

		}
		option = {
			if = {
				limit = {
					var:gold_earned >= 0
				}
				add_gold = var:gold_earned
			}

			else_if = {
				limit = {
					var:gold_earned < 0
				}

				remove_short_term_gold = root.abs_value

			}
		}

	}

	tournament.0809 = {
		title = tournament.0809.title
		desc = tournament.0809.desc

		left_portrait = {
			character = scope:activity.activity_owner
			animation = ecstasy
		}
		# right_portrait = {
		# 	character = scope:attendee
		# 	triggered_animation = {
		# 		trigger = {
		# 			scope:attendee.performance_rating > 0
		# 		}
		# 		animation = happiness
		# 	}
		# 	animation = idle
		# }

		lower_left_portrait = scope:first_place
		lower_center_portrait = scope:second_place
		lower_right_portrait = scope:third_place

		theme = feast_activity
		override_background = {
			event_background = throne_room_scope
		}

		trigger = {
			exists = scope:activity

		}


		immediate = {
			play_music_cue = "mx_cue_meadandwine"

			
			scope:activity = {
				every_participant = {
					limit = {
						NOT = {
							has_character_flag = host_not_fighting
						}
						has_variable = capture_diff
					}
					add_to_list = participant_list

				}
			}

			
			root.melee_ranking = {
				save_scope_as = THE_RANK
			}

		
			ordered_in_list = {
				list = participant_list
				order_by = melee_ranking
				max = 1
				save_scope_as = first_place
				remove_from_list = participant_list
			}
			ordered_in_list = {
				list = participant_list
				order_by = melee_ranking
				max = 1
				save_scope_as = second_place
				remove_from_list = participant_list
			}

			ordered_in_list = {
				list = participant_list
				order_by = melee_ranking
				max = 1
				save_scope_as = third_place
				remove_from_list = participant_list
			}

			trigger_event = {
				id = tournament.0810
				days = 5
			}
		}

		option = { #First place
			name = tournament.0809.option.a
			trigger = {
				root = scope:first_place
			}
			add_gold = melee_prize_first
			add_prestige = melee_prestige_gain_large

		}
		option = { #Second place
			name = tournament.0809.option.b
			trigger = {
				root = scope:second_place
			}
			add_gold = melee_prize_second
			add_prestige = melee_prestige_gain_medium

		}	
		option = {#Third place
			name = tournament.0809.option.c
			trigger = {
				root = scope:third_place
			}
			add_gold = melee_prize_third
			add_prestige = melee_prestige_gain_small
		}
		option = { #Host
			name = tournament.0809.option.d
			trigger = {
				root = scope:activity.activity_owner
				NOR = {
					root = scope:first_place
					root = scope:second_place
					root = scope:third_place
				}
			}
			
		}
		option = {#Everyone else
			name = tournament.0809.option.d
			trigger = {
				NOR = {
					root = scope:activity.activity_owner
					root = scope:first_place
					root = scope:second_place
					root = scope:third_place
				}
			}

		}
	}


	tournament.0810 = {
		title = tourmament.0810
		left_portrait = root

		trigger = {
			exists = scope:activity
		}

		immediate = {

			remove_variable = prowess_gained
			remove_variable = gold_earned
			remove_variable = number_of_captures
			remove_variable = number_of_times_captured
			remove_variable = EVENT_COUNTER
			if = {
				limit = {
					root = scope:activity.activity_owner
				}
				remove_variable = num
				if = {
					limit = {
						has_character_flag = host_not_fighting
					}
					remove_character_flag = host_not_fighting
				}
			}
		}

		option = {
			if = {
				limit = {
					root = scope:activity.activity_owner
				}
				add_prestige = tournament_host_prestige
			}
			scope:activity = {
				complete_activity = yes
			}
			remove_character_flag = got_knocked_off
			remove_character_flag = tournament_duel
			remove_character_flag = got_captured
			remove_character_flag = captured_opponent
			remove_character_flag = knocked_opponent_off
			remove_character_flag = beat_opponent_into_submission
			remove_character_flag = got_beaten_into_submission
			remove_character_flag = opponent_attacking
			remove_character_flag = is_in_melee_duel
		}
	}



	tournament.0999 = {
		hidden = yes

		trigger = {
			NOT = {
				has_character_flag = host_not_fighting
			}
		}

		immediate = {

			if = {
				limit = {
					root = {
						NOT = {
							exists = var:EVENT_COUNTER
						}
					}
				}
				root = {
					set_variable = {
						name = EVENT_COUNTER		
						value = 0
					}
				}	
			}

			if = {
				limit = {
					var:EVENT_COUNTER <= 3
				}
				change_variable = {
					name = EVENT_COUNTER
					add = 1
				}
				random_list = {
					50 = {
						modifier = {
							positive_traits_tournament_small = yes
							add = 5
						}
						modifier = {
							positive_traits_tournament_medium = yes
							add = 10
						}
						modifier = {
							positive_traits_tournament_large = yes
							add = 15
						}
						trigger_event = {
							on_action = tournament_melee_good_selection
							days = 5
						}
					}						
					50 = {
						modifier = {
							negative_traits_tournament_small = yes
							add = 5
						}
						modifier = {
							negative_traits_tournament_medium = yes
							add = 10
						}
						modifier = {
							negative_traits_tournament_large = yes
							add = 15
						}
	
						trigger_event = {
							on_action = tournament_melee_bad_selection
							days = 5
						}
					}
				}
			}
			else_if = {
				limit = {
					AND = {
						var:EVENT_COUNTER >= 3
						var:EVENT_COUNTER <9
					}

				}
				trigger_event = tournament.0807
			}
				

			else = {
				if = {
					limit = {
						NOT = {
							has_character_flag = ready_to_finish_melee
						}
					}
					add_character_flag = ready_to_finish_melee
				}
				
				trigger_event = tournament.0999
			}
			if = {
				limit = {
					scope:activity = {
						any_participant = {
							count = all
							has_character_flag = ready_to_finish_melee
						}
					}
				}
				scope:activity = {
					every_participant = {
						trigger_event = {
							id = tournament.0808
							days = 5
						}
					}
				}


			}
		}
	}





